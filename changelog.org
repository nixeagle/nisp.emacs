* 2010
*** 2010-01 January
***** 2010-01-15 Friday
******* Rename nisp-paste-remote-host to -remote-directory          :paste:
        :PROPERTIES:
        :VERSION:  0.2.0
        :END:
        not going to work, release v0.2.0 _INCOMPATABLE CHANGE_.
          
        Please enter M-x customize-group RET nisp-paste RET and set the path
        again. The variable is renamed and I do not know how to tell
        customize to depreciate things.
          
        Because this is not after the 1.0 release minor version number
        increases signal feature additions _and_ incompatable
        changes. Please read the commit summaries for v0.X.0 releases.
******* Spaces in paste name now converted to nisp-paste-url-space-char :paste:
        :PROPERTIES:
        :VERSION:  0.3.0
        :END:
        Added nisp-paste-url-space-char as a new customize option. Defaults to
        "-", replace with whatever else you like. This value gets used to
        replace any spaces in the name you type with something prettier then
        the automatic alternative =%20= or whatever it is ;).
******* Option to automatically append a filename extension         :paste:
        :PROPERTIES:
        :VERSION:  0.4.0
        :END:
        The option is =nisp-paste-filename-extension=

        By default no extension is added automatically. This is for
        purely aesthetic reasons and is not too useful if your server
        sends plain/text mime headers.

        If this is the case, change this to .html or modify your .htacess
        for the domain to send text/html by default.

        Thanks to charlie for the request!
******* Add nisp-replace-spaces                                     :paste:
        :PROPERTIES:
        :VERSION:  0.5.0
        :END:
        This is a function that goes on an abnormal hook. Some examples of its
        use in raw lisp:

        Using the default
        : (nisp-paste-replace-spaces "testing it")
        : => "testing-it"

        Using an optional extension
        : (nisp-paste-replace-spaces "testing it" "_")
        : => "testing_it"
******* Add nisp-paste-append-filename-extension                    :paste:
        :PROPERTIES:
        :VERSION:  0.5.0
        :END:
        Append EXTENSION or if nil =nisp-paste-filename-extension= to FILENAME.

        Using default EXTENSION
        : (nisp-paste-append-filename-extension "test")
        : => "test"

        Changing the default EXTENSION as if it were changed by the user to
        something other then "" (the default).
        : (let ((nisp-paste-filename-extension ".html"))
        :   (nisp-paste-append-filename-extension "test"))
        : => "test.html"

        Passing extension as an explicit argument.
        : (nisp-paste-append-filename-extension "test" ".html")
        : => "test.html"
******* New customize option: -format-filename-functions            :paste:
        :PROPERTIES:
        :VERSION:  0.5.0
        :END:
        Hooks called before saving a file to disk.

        These get called passing one argument, the filename to apply
        changes to. All functions in this list are run using the returned
        filename from prior calls.
******* default nisp-paste-filename-extension to .html              :paste:
        :PROPERTIES:
        :VERSION:  0.6.0
        :END:
        Defaulting this to .html does not automatically meam all paste names
        have .html extensions because it still needs to be enabled on the
        -format-filename-functions hook.
******* Reorder customize group                                     :paste:
        :PROPERTIES:
        :VERSION:  0.6.0
        :END:
        The hook =nisp-paste-format-filename-functions= is now before
        =nisp-paste-url-space-char= and =nisp-paste-append-filename-extension=.
